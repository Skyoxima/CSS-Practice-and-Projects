@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', sans-serif;
}

section {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;

    padding: 40px 0;
    min-height: 100vh;
    background: linear-gradient(0deg, black, rgb(169, 62, 0));
}

/* section::before {
    content: '';
    position: absolute;
    top: 45%; left: 0;
    width: 100%; height: 50px;
    background: radial-gradient(rgb(15, 15, 15) 0%, rgb(169, 62, 0) 10%, rgb(15, 15, 15) 30%);
} */

.main-container {
    width: 900px;

    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;

    /* background-color: rgba(255, 0, 0, 0.1); */
}

.main-container .card {
    position: relative;
    width: 250px; height: 300px;
    margin: 20px 20px 60px;
    
    text-align: center;
    z-index: 10;
    transition: 0.5s;

    /* background-color: rgba(0, 255, 0, 0.1); */
}

.main-container .card .box {
    position: absolute;
    width: 100%; height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;
    
    background: rgba(255, 255, 255, 0.05);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(15px);
    z-index: 10;
    
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 10px;

}

.percent {
    position: relative;
    width: 150px; height: 150px;
    border-radius: 50%;
    z-index: 100; 
    /* background-color: aqua; */
}

.percent .number {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    
    display: flex;
    justify-content: center;
    align-items: center;
    /* background-color: aquamarine; */
}

.percent .number h2 {
    color: white;
    font-weight: 700;
    font-size: 50px;
}

.percent .number h2 span {
    font-size: 24px;
}

svg {
    position: relative;
    width: 150px; height: 150px;
}

svg circle {
    width: 100%; height: 100%;
    transform: translate(5px, 5px);
    
    fill: none;
    stroke: rgba(255, 255, 255, 0.05);
    stroke-width: 10px;
    stroke-linecap: round;
}

svg circle:nth-child(2) {    
    stroke: rgba(255, 255, 255, 1);
    stroke-dasharray: 440px;
    /* This decides the length of the stroke and gap alternate pattern and since we want an uninterrupted line we need this value to be greater than the circumference of the circle */
    stroke-dashoffset: 110px;
    /* This decides the "delay" to start the stroke */

    transform-origin: center center;
    transform: translate(5px, -5px) rotate(-90deg);
    /* Both lines are used to change the origin of the stroke (right to top) */
}

/* To use the default values for progress calculation */
#filledCircle-card1 {
    stroke-dashoffset: calc(440px - (440px * 90) / 100);
}

#filledCircle-card2 {
    stroke-dashoffset: calc(440px - (440px * 82) / 100);
}

#filledCircle-card3 {
    stroke-dashoffset: calc(440px - (440px * 95) / 100);
}

.text {
    position: absolute;
    bottom: -42px; left: 50%;
    transform: translateX(-50%);
    padding: 30px 20px 10px;

    background: var(--bgclr);
    border-radius: 10px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);

    text-align: center;
    color: white;
    font-weight: 800;
    text-transform: uppercase;
    letter-spacing: 1px;

    pointer-events: none;
    z-index: 1;
    transition: bottom 0.25s, z-index 0s, transform 0.25s, padding 0.25s;
    /* the above are transition property and transition duration pairs, don't confuse it with delay */
    transition-delay: 0.25s, 0.25s, 0s, 0.25s; 
    /* these delays apply on un-hovering */
}

.card:hover .text {
    bottom: -70px;
    z-index: 11;
    transform: translateX(-50%) translateY(-50px);
    padding: 10px 20px 10px;
    transition-delay: 0s, 0.25s, 0.25s, 0s;
    /* these delays apply on hovering */
}

.changer {
    position: relative;
    margin: 0px 20px;
    
    display: flex;
    justify-content: space-around;
    align-items: center;
}

.changerbox {
    width: 120px;
    padding: 5px 10px;    
    font-size: 16px;
    color: white;
    
    border: none;
    outline: none;
    background-color: transparent;
    
    border-bottom: 2px solid red;
    border-radius: 10px;
}

.changerbutton {
    padding: 6px 12px;

    background: rgba(255, 255, 255, 0.05);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
    
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 10px;
    
    color: white;
    font-size: 18px;
}

.changerbutton:active {
    animation: clickeffect 0.25s ease-out;
}

@keyframes clickeffect {
    from {
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
    }
    
    to {
        box-shadow: 0 0 10px 5px rgba(255, 255, 255, 0.5);
    }
}